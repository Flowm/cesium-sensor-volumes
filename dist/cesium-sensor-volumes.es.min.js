/**
 * Cesium Sensor Volumes - https://github.com/Flowm/cesium-sensor-volumes
 *
 * Copyright 2016 Jonathan Lounsbury
 * Copyright 2011-2014 Analytical Graphics Inc. and Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Portions licensed separately.
 * See https://github.com/Flowm/cesium-sensor-volumes/blob/master/LICENSE.md for full licensing details.
 *
 * Derived from Cesium Sensors - https://github.com/AnalyticalGraphicsInc/cesium-sensors
 */
import{createPropertyDescriptor as i,createMaterialPropertyDescriptor as t,defined as e,DeveloperError as n,Event as o,Frozen as r,Cartesian3 as s,SceneMode as a,RenderState as l,BlendingState as h,CullFace as c,Pass as u,Matrix4 as d,BoundingSphere as m,ShaderSource as f,ShaderProgram as _,combine as p,destroyObject as C,DrawCommand as g,PrimitiveType as v,Material as w,Color as S,Buffer as y,BufferUsage as A,ComponentDatatype as M,VertexArray as I,Matrix3 as x,Quaternion as T,AssociativeArray as b,Property as E,Math as k,MaterialProperty as H,Spherical as V,clone as W,CzmlDataSource as P,DataSourceDisplay as O,TimeInterval as F}from"cesium";const z=function(i){this._minimumClockAngle=void 0,this._minimumClockAngleSubscription=void 0,this._maximumClockAngle=void 0,this._maximumClockAngleSubscription=void 0,this._innerHalfAngle=void 0,this._innerHalfAngleSubscription=void 0,this._outerHalfAngle=void 0,this._outerHalfAngleSubscription=void 0,this._lateralSurfaceMaterial=void 0,this._lateralSurfaceMaterialSubscription=void 0,this._intersectionColor=void 0,this._intersectionColorSubscription=void 0,this._intersectionWidth=void 0,this._intersectionWidthSubscription=void 0,this._showIntersection=void 0,this._showIntersectionSubscription=void 0,this._radius=void 0,this._radiusSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._definitionChanged=new o,this.merge(i??r.EMPTY_OBJECT)};Object.defineProperties(z.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},minimumClockAngle:i("minimumClockAngle"),maximumClockAngle:i("maximumClockAngle"),innerHalfAngle:i("innerHalfAngle"),outerHalfAngle:i("outerHalfAngle"),lateralSurfaceMaterial:t("lateralSurfaceMaterial"),intersectionColor:i("intersectionColor"),intersectionWidth:i("intersectionWidth"),showIntersection:i("showIntersection"),radius:i("radius"),show:i("show")}),z.prototype.clone=function(i){return e(i)||(i=new z),i.show=this.show,i.innerHalfAngle=this.innerHalfAngle,i.outerHalfAngle=this.outerHalfAngle,i.minimumClockAngle=this.minimumClockAngle,i.maximumClockAngle=this.maximumClockAngle,i.radius=this.radius,i.showIntersection=this.showIntersection,i.intersectionColor=this.intersectionColor,i.intersectionWidth=this.intersectionWidth,i.lateralSurfaceMaterial=this.lateralSurfaceMaterial,i},z.prototype.merge=function(i){if(!e(i))throw new n("source is required.");this.show=this.show??i.show,this.innerHalfAngle=this.innerHalfAngle??i.innerHalfAngle,this.outerHalfAngle=this.outerHalfAngle??i.outerHalfAngle,this.minimumClockAngle=this.minimumClockAngle??i.minimumClockAngle,this.maximumClockAngle=this.maximumClockAngle??i.maximumClockAngle,this.radius=this.radius??i.radius,this.showIntersection=this.showIntersection??i.showIntersection,this.intersectionColor=this.intersectionColor??i.intersectionColor,this.intersectionWidth=this.intersectionWidth??i.intersectionWidth,this.lateralSurfaceMaterial=this.lateralSurfaceMaterial??i.lateralSurfaceMaterial};var D="#version 300 es\n\nuniform vec4 u_intersectionColor;\nuniform float u_intersectionWidth;\n\nbool inSensorShadow(vec3 coneVertexWC, vec3 pointWC)\n{\n    \n    vec3 D = czm_ellipsoidInverseRadii;\n\n    \n    vec3 q = D * coneVertexWC;\n    float qMagnitudeSquared = dot(q, q);\n    float test = qMagnitudeSquared - 1.0;\n\n    \n    vec3 temp = D * pointWC - q;\n    float d = dot(temp, q);\n\n    \n    return (d < -test) && (d / length(temp) < -sqrt(test));\n}\n\nvec4 getIntersectionColor()\n{\n    return u_intersectionColor;\n}\n\nfloat getIntersectionWidth()\n{\n    return u_intersectionWidth;\n}\n\nvec2 sensor2dTextureCoordinates(float sensorRadius, vec3 pointMC)\n{\n    \n    float t = pointMC.z / sensorRadius;\n    float s = 1.0 + (atan(pointMC.y, pointMC.x) / czm_twoPi);\n    s = s - floor(s);\n\n    return vec2(s, t);\n}\n",R="#version 300 es\n\nuniform bool u_showIntersection;\nuniform bool u_showThroughEllipsoid;\n\nuniform float u_sensorRadius;\nuniform float u_normalDirection;\n\nin vec3 v_positionWC;\nin vec3 v_positionEC;\nin vec3 v_normalEC;\n\nvec4 getColor(float sensorRadius, vec3 pointEC)\n{\n    czm_materialInput materialInput;\n\n    vec3 pointMC = (czm_inverseModelView * vec4(pointEC, 1.0)).xyz;\n    materialInput.st = sensor2dTextureCoordinates(sensorRadius, pointMC);\n    materialInput.str = pointMC / sensorRadius;\n\n    vec3 positionToEyeEC = -v_positionEC;\n    materialInput.positionToEyeEC = positionToEyeEC;\n\n    vec3 normalEC = normalize(v_normalEC);\n    materialInput.normalEC = u_normalDirection * normalEC;\n\n    czm_material material = czm_getMaterial(materialInput);\n    return mix(czm_phong(normalize(positionToEyeEC), material, czm_lightDirectionEC), vec4(material.diffuse, material.alpha), 0.4);\n}\n\nbool isOnBoundary(float value, float epsilon)\n{\n    float width = getIntersectionWidth();\n    float tolerance = width * epsilon;\n\n    float delta = max(abs(dFdx(value)), abs(dFdy(value)));\n    float pixels = width * delta;\n    float temp = abs(value);\n    \n    \n    \n    \n    \n    \n    \n    return temp < tolerance && temp < pixels || (delta < 10.0 * tolerance && temp - delta < tolerance && temp < pixels);\n}\n\nvec4 shade(bool isOnBoundary)\n{\n    if (u_showIntersection && isOnBoundary)\n    {\n        return getIntersectionColor();\n    }\n    return getColor(u_sensorRadius, v_positionEC);\n}\n\nfloat ellipsoidSurfaceFunction(vec3 point)\n{\n    vec3 scaled = czm_ellipsoidInverseRadii * point;\n    return dot(scaled, scaled) - 1.0;\n}\n\nvoid main()\n{\n    vec3 sensorVertexWC = czm_model[3].xyz;      \n    vec3 sensorVertexEC = czm_modelView[3].xyz;  \n\n    float ellipsoidValue = ellipsoidSurfaceFunction(v_positionWC);\n\n    \n    if (!u_showThroughEllipsoid)\n    {\n        \n        \n        if (ellipsoidValue < 0.0)\n        {\n            discard;\n        }\n\n        \n        if (inSensorShadow(sensorVertexWC, v_positionWC))\n        {\n            discard;\n        }\n    }\n\n    \n    \n    if (distance(v_positionEC, sensorVertexEC) > u_sensorRadius)\n    {\n        discard;\n    }\n\n    \n    bool isOnEllipsoid = isOnBoundary(ellipsoidValue, czm_epsilon3);\n    out_FragColor = shade(isOnEllipsoid);\n}\n",N="#version 300 es\n\nin vec4 position;\nin vec3 normal;\n\nout vec3 v_positionWC;\nout vec3 v_positionEC;\nout vec3 v_normalEC;\n\nvoid main()\n{\n    gl_Position = czm_modelViewProjection * position;\n    v_positionWC = (czm_model * position).xyz;\n    v_positionEC = (czm_modelView * position).xyz;\n    v_normalEC = czm_normal * normal;\n}\n";const q={position:0,normal:1},B=5906376272e3,L=function(i){i=i??r.EMPTY_OBJECT,this._pickId=void 0,this._pickPrimitive=i._pickPrimitive??this,this._frontFaceColorCommand=new g,this._backFaceColorCommand=new g,this._pickCommand=new g,this._boundingSphere=new m,this._boundingSphereWC=new m,this._frontFaceColorCommand.primitiveType=v.TRIANGLES,this._frontFaceColorCommand.boundingVolume=this._boundingSphereWC,this._frontFaceColorCommand.owner=this,this._backFaceColorCommand.primitiveType=this._frontFaceColorCommand.primitiveType,this._backFaceColorCommand.boundingVolume=this._frontFaceColorCommand.boundingVolume,this._backFaceColorCommand.owner=this,this._pickCommand.primitiveType=this._frontFaceColorCommand.primitiveType,this._pickCommand.boundingVolume=this._frontFaceColorCommand.boundingVolume,this._pickCommand.owner=this,this.show=i.show??!0,this.showIntersection=i.showIntersection??!0,this.showThroughEllipsoid=i.showThroughEllipsoid??!1,this._showThroughEllipsoid=this.showThroughEllipsoid,this.modelMatrix=d.clone(i.modelMatrix??d.IDENTITY),this._modelMatrix=new d,this.radius=i.radius??Number.POSITIVE_INFINITY,this._directions=void 0,this._directionsDirty=!1,this.directions=e(i.directions)?i.directions:[],this.lateralSurfaceMaterial=e(i.lateralSurfaceMaterial)?i.lateralSurfaceMaterial:w.fromType(w.ColorType),this._lateralSurfaceMaterial=void 0,this._translucent=void 0,this.intersectionColor=S.clone(i.intersectionColor??S.WHITE),this.intersectionWidth=i.intersectionWidth??5,this.id=i.id,this._id=void 0;var t=this;this._uniforms={u_showThroughEllipsoid:function(){return t.showThroughEllipsoid},u_showIntersection:function(){return t.showIntersection},u_sensorRadius:function(){return isFinite(t.radius)?t.radius:B},u_intersectionColor:function(){return t.intersectionColor},u_intersectionWidth:function(){return t.intersectionWidth},u_normalDirection:function(){return 1}},this._mode=a.SCENE3D};Object.defineProperties(L.prototype,{directions:{get:function(){return this._directions},set:function(i){this._directions=i,this._directionsDirty=!0}}});const U=new s,Y=new s,j=new s;const Q=new s;function G(i,t){for(var e=function(i){for(var t=i._directions,e=t.length,n=new Float32Array(3*e),o=isFinite(i.radius)?i.radius:B,r=[s.ZERO],a=e-2,l=e-1,h=0;h<e;a=l++,l=h++){var c=s.fromSpherical(t[a],U),u=s.fromSpherical(t[l],Y),d=s.fromSpherical(t[h],j),f=Math.max(s.angleBetween(c,u),s.angleBetween(u,d)),_=o/Math.cos(.5*f),p=s.multiplyByScalar(u,_,new s);n[3*l]=p.x,n[3*l+1]=p.y,n[3*l+2]=p.z,r.push(p)}return m.fromPoints(r,i._boundingSphere),n}(i),n=i._directions.length,o=new Float32Array(18*n),r=0,a=n-1,l=0;l<n;a=l++){var h=new s(e[3*a],e[3*a+1],e[3*a+2]),c=new s(e[3*l],e[3*l+1],e[3*l+2]),u=s.normalize(s.cross(c,h,Q),Q);o[r++]=0,o[r++]=0,o[r++]=0,o[r++]=u.x,o[r++]=u.y,o[r++]=u.z,o[r++]=c.x,o[r++]=c.y,o[r++]=c.z,o[r++]=u.x,o[r++]=u.y,o[r++]=u.z,o[r++]=h.x,o[r++]=h.y,o[r++]=h.z,o[r++]=u.x,o[r++]=u.y,o[r++]=u.z}var d=y.createVertexBuffer({context:t,typedArray:new Float32Array(o),usage:A.STATIC_DRAW}),f=6*Float32Array.BYTES_PER_ELEMENT,_=[{index:q.position,vertexBuffer:d,componentsPerAttribute:3,componentDatatype:M.FLOAT,offsetInBytes:0,strideInBytes:f},{index:q.normal,vertexBuffer:d,componentsPerAttribute:3,componentDatatype:M.FLOAT,offsetInBytes:3*Float32Array.BYTES_PER_ELEMENT,strideInBytes:f}];return new I({context:t,attributes:_})}function J(i,t,n){var o=t[i.id];if(e(o)){var r=o.primitive;n.remove(r),r.isDestroyed()||r.destroy(),delete t[i.id]}}L.prototype.update=function(i){if(this._mode=i.mode,this.show&&this._mode===a.SCENE3D){var t=i.context,o=i.commandList;if(this.radius<0)throw new n("this.radius must be greater than or equal to zero.");if(!e(this.lateralSurfaceMaterial))throw new n("this.lateralSurfaceMaterial must be defined.");var r,s=this.lateralSurfaceMaterial.isTranslucent();if(this._showThroughEllipsoid!==this.showThroughEllipsoid||!e(this._frontFaceColorCommand.renderState)||this._translucent!==s)this._showThroughEllipsoid=this.showThroughEllipsoid,this._translucent=s,s?(r=l.fromCache({depthTest:{enabled:!this.showThroughEllipsoid},depthMask:!1,blending:h.ALPHA_BLEND,cull:{enabled:!0,face:c.BACK}}),this._frontFaceColorCommand.renderState=r,this._frontFaceColorCommand.pass=u.TRANSLUCENT,r=l.fromCache({depthTest:{enabled:!this.showThroughEllipsoid},depthMask:!1,blending:h.ALPHA_BLEND,cull:{enabled:!0,face:c.FRONT}}),this._backFaceColorCommand.renderState=r,this._backFaceColorCommand.pass=u.TRANSLUCENT,r=l.fromCache({depthTest:{enabled:!this.showThroughEllipsoid},depthMask:!1,blending:h.ALPHA_BLEND}),this._pickCommand.renderState=r):(r=l.fromCache({depthTest:{enabled:!0},depthMask:!0}),this._frontFaceColorCommand.renderState=r,this._frontFaceColorCommand.pass=u.OPAQUE,r=l.fromCache({depthTest:{enabled:!0},depthMask:!0}),this._pickCommand.renderState=r);var C=this._directionsDirty;if(C){this._directionsDirty=!1,this._va=this._va&&this._va.destroy();var g=this._directions;g&&g.length>=3&&(this._frontFaceColorCommand.vertexArray=G(this,t),this._backFaceColorCommand.vertexArray=this._frontFaceColorCommand.vertexArray,this._pickCommand.vertexArray=this._frontFaceColorCommand.vertexArray)}if(e(this._frontFaceColorCommand.vertexArray)){var v=i.passes,w=!d.equals(this.modelMatrix,this._modelMatrix);w&&d.clone(this.modelMatrix,this._modelMatrix),(C||w)&&m.transform(this._boundingSphere,this.modelMatrix,this._boundingSphereWC),this._frontFaceColorCommand.modelMatrix=this.modelMatrix,this._backFaceColorCommand.modelMatrix=this._frontFaceColorCommand.modelMatrix,this._pickCommand.modelMatrix=this._frontFaceColorCommand.modelMatrix;var S=this._lateralSurfaceMaterial!==this.lateralSurfaceMaterial;if(this._lateralSurfaceMaterial=this.lateralSurfaceMaterial,this._lateralSurfaceMaterial.update(t),v.render){var y=this._frontFaceColorCommand,A=this._backFaceColorCommand;if(S||!e(y.shaderProgram)){var M=new f({sources:[D,this._lateralSurfaceMaterial.shaderSource,R]});y.shaderProgram=_.replaceCache({context:t,shaderProgram:y.shaderProgram,vertexShaderSource:N,fragmentShaderSource:M,attributeLocations:q}),y.uniformMap=p(this._uniforms,this._lateralSurfaceMaterial._uniforms),A.shaderProgram=y.shaderProgram,A.uniformMap=p(this._uniforms,this._lateralSurfaceMaterial._uniforms),A.uniformMap.u_normalDirection=function(){return-1}}s?o.push(this._backFaceColorCommand,this._frontFaceColorCommand):o.push(this._frontFaceColorCommand)}if(v.pick){var I=this._pickCommand;if(e(this._pickId)&&this._id===this.id||(this._id=this.id,this._pickId=this._pickId&&this._pickId.destroy(),this._pickId=t.createPickId({primitive:this._pickPrimitive,id:this.id})),S||!e(I.shaderProgram)){var x=new f({sources:[D,this._lateralSurfaceMaterial.shaderSource,R],pickColorQualifier:"uniform"});I.shaderProgram=_.replaceCache({context:t,shaderProgram:I.shaderProgram,vertexShaderSource:N,fragmentShaderSource:x,attributeLocations:q});var T=this,b={czm_pickColor:function(){return T._pickId.color}};I.uniformMap=p(p(this._uniforms,this._lateralSurfaceMaterial._uniforms),b)}I.pass=s?u.TRANSLUCENT:u.OPAQUE,o.push(I)}}}},L.prototype.isDestroyed=function(){return!1},L.prototype.destroy=function(){return this._frontFaceColorCommand.vertexArray=this._frontFaceColorCommand.vertexArray&&this._frontFaceColorCommand.vertexArray.destroy(),this._frontFaceColorCommand.shaderProgram=this._frontFaceColorCommand.shaderProgram&&this._frontFaceColorCommand.shaderProgram.destroy(),this._pickCommand.shaderProgram=this._pickCommand.shaderProgram&&this._pickCommand.shaderProgram.destroy(),this._pickId=this._pickId&&this._pickId.destroy(),C(this)};const K=S.WHITE,Z=Number.POSITIVE_INFINITY,X=new x,$=new s,ii=new T;function ti(i,t,n,o){var r=t[i];e(r)||(r=new V,t[i]=r),r.clock=n,r.cone=o,r.magnitude=1}function ei(i,t,e,n,o){var r,s=i.directions,a=0,l=k.toRadians(2);if(0===t&&e===k.TWO_PI)for(r=0;r<k.TWO_PI;r+=l)ti(a++,s,r,o);else{for(r=t;r<e;r+=l)ti(a++,s,r,o);if(ti(a++,s,e,o),n){for(r=e;r>t;r-=l)ti(a++,s,r,n);ti(a++,s,t,n)}else ti(a++,s,e,0)}s.length=a,i.directions=s}const ni=function(i,t){if(!e(i))throw new n("scene is required.");if(!e(t))throw new n("entityCollection is required.");t.collectionChanged.addEventListener(ni.prototype._onCollectionChanged,this),this._scene=i,this._primitives=i.primitives,this._entityCollection=t,this._hash={},this._entitiesToVisualize=new b,this._onCollectionChanged(t,t.values,[],[])};ni.prototype.update=function(i){if(!e(i))throw new n("time is required.");for(var t=this._entitiesToVisualize.values,o=this._hash,r=this._primitives,a=0,l=t.length;a<l;a++){var h,c,u=t[a],m=u._conicSensor,f=o[u.id],_=u.isShowing&&u.isAvailable(i)&&E.getValueOrDefault(m._show,i,!0);if(_&&(h=E.getValueOrUndefined(u._position,i,$),c=E.getValueOrUndefined(u._orientation,i,ii),_=e(h)&&e(c)),_){var p=e(f)?f.primitive:void 0;e(p)||((p=new L).id=u,r.add(p),f={primitive:p,position:void 0,orientation:void 0,minimumClockAngle:void 0,maximumClockAngle:void 0,innerHalfAngle:void 0,outerHalfAngle:void 0},o[u.id]=f),s.equals(h,f.position)&&T.equals(c,f.orientation)||(d.fromRotationTranslation(x.fromQuaternion(c,X),h,p.modelMatrix),f.position=s.clone(h,f.position),f.orientation=T.clone(c,f.orientation)),p.show=!0;var C=E.getValueOrDefault(m._minimumClockAngle,i,0),g=E.getValueOrDefault(m._maximumClockAngle,i,k.TWO_PI),v=E.getValueOrDefault(m._innerHalfAngle,i,0),w=E.getValueOrDefault(m._outerHalfAngle,i,Math.PI);C===f.minimumClockAngle&&g===f.maximumClockAngle&&v===f.innerHalfAngle&&w===f.outerHalfAngle||(ei(p,C,g,v,w),f.innerHalfAngle=v,f.maximumClockAngle=g,f.outerHalfAngle=w,f.minimumClockAngle=C),p.radius=E.getValueOrDefault(m._radius,i,Z),p.lateralSurfaceMaterial=H.getValue(i,m._lateralSurfaceMaterial,p.lateralSurfaceMaterial),p.intersectionColor=E.getValueOrClonedDefault(m._intersectionColor,i,K,p.intersectionColor),p.intersectionWidth=E.getValueOrDefault(m._intersectionWidth,i,1)}else e(f)&&(f.primitive.show=!1)}return!0},ni.prototype.isDestroyed=function(){return!1},ni.prototype.destroy=function(){for(var i=this._entitiesToVisualize.values,t=this._hash,e=this._primitives,n=i.length-1;n>-1;n--)J(i[n],t,e);return C(this)},ni.prototype._onCollectionChanged=function(i,t,n,o){var r,s,a=this._entitiesToVisualize,l=this._hash,h=this._primitives;for(r=t.length-1;r>-1;r--)s=t[r],e(s._conicSensor)&&e(s._position)&&e(s._orientation)&&a.set(s.id,s);for(r=o.length-1;r>-1;r--)s=o[r],e(s._conicSensor)&&e(s._position)&&e(s._orientation)?a.set(s.id,s):(J(s,l,h),a.remove(s.id));for(r=n.length-1;r>-1;r--)J(s=n[r],l,h),a.remove(s.id)};const oi=function(i){this._directions=void 0,this._directionsSubscription=void 0,this._lateralSurfaceMaterial=void 0,this._lateralSurfaceMaterialSubscription=void 0,this._intersectionColor=void 0,this._intersectionColorSubscription=void 0,this._intersectionWidth=void 0,this._intersectionWidthSubscription=void 0,this._showIntersection=void 0,this._showIntersectionSubscription=void 0,this._radius=void 0,this._radiusSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._definitionChanged=new o,this.merge(i??r.EMPTY_OBJECT)};Object.defineProperties(oi.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},directions:i("directions"),lateralSurfaceMaterial:t("lateralSurfaceMaterial"),intersectionColor:i("intersectionColor"),intersectionWidth:i("intersectionWidth"),showIntersection:i("showIntersection"),radius:i("radius"),show:i("show")}),oi.prototype.clone=function(i){return e(i)||(i=new oi),i.directions=this.directions,i.radius=this.radius,i.show=this.show,i.showIntersection=this.showIntersection,i.intersectionColor=this.intersectionColor,i.intersectionWidth=this.intersectionWidth,i.lateralSurfaceMaterial=this.lateralSurfaceMaterial,i},oi.prototype.merge=function(i){if(!e(i))throw new n("source is required.");this.directions=this.directions??i.directions,this.radius=this.radius??i.radius,this.show=this.show??i.show,this.showIntersection=this.showIntersection??i.showIntersection,this.intersectionColor=this.intersectionColor??i.intersectionColor,this.intersectionWidth=this.intersectionWidth??i.intersectionWidth,this.lateralSurfaceMaterial=this.lateralSurfaceMaterial??i.lateralSurfaceMaterial};const ri=S.WHITE,si=Number.POSITIVE_INFINITY,ai=new x,li=new s,hi=new T,ci=function(i,t){if(!e(i))throw new n("scene is required.");if(!e(t))throw new n("entityCollection is required.");t.collectionChanged.addEventListener(ci.prototype._onCollectionChanged,this),this._scene=i,this._primitives=i.primitives,this._entityCollection=t,this._hash={},this._entitiesToVisualize=new b,this._onCollectionChanged(t,t.values,[],[])};ci.prototype.update=function(i){if(!e(i))throw new n("time is required.");for(var t=this._entitiesToVisualize.values,o=this._hash,r=this._primitives,a=0,l=t.length;a<l;a++){var h,c,u,m=t[a],f=m._customPatternSensor,_=o[m.id],p=m.isShowing&&m.isAvailable(i)&&E.getValueOrDefault(f._show,i,!0);if(p&&(h=E.getValueOrUndefined(m._position,i,li),c=E.getValueOrUndefined(m._orientation,i,hi),u=E.getValueOrUndefined(f._directions,i),p=e(h)&&e(c)&&e(u)),p){var C=e(_)?_.primitive:void 0;e(C)||((C=new L).id=m,r.add(C),_={primitive:C,position:void 0,orientation:void 0},o[m.id]=_),s.equals(h,_.position)&&T.equals(c,_.orientation)||(d.fromRotationTranslation(x.fromQuaternion(c,ai),h,C.modelMatrix),_.position=s.clone(h,_.position),_.orientation=T.clone(c,_.orientation)),C.show=!0,C.directions=u,C.radius=E.getValueOrDefault(f._radius,i,si),C.lateralSurfaceMaterial=H.getValue(i,f._lateralSurfaceMaterial,C.lateralSurfaceMaterial),C.intersectionColor=E.getValueOrClonedDefault(f._intersectionColor,i,ri,C.intersectionColor),C.intersectionWidth=E.getValueOrDefault(f._intersectionWidth,i,1)}else e(_)&&(_.primitive.show=!1)}return!0},ci.prototype.isDestroyed=function(){return!1},ci.prototype.destroy=function(){for(var i=this._entitiesToVisualize.values,t=this._hash,e=this._primitives,n=i.length-1;n>-1;n--)J(i[n],t,e);return C(this)},ci.prototype._onCollectionChanged=function(i,t,n,o){var r,s,a=this._entitiesToVisualize,l=this._hash,h=this._primitives;for(r=t.length-1;r>-1;r--)s=t[r],e(s._customPatternSensor)&&e(s._position)&&e(s._orientation)&&a.set(s.id,s);for(r=o.length-1;r>-1;r--)s=o[r],e(s._customPatternSensor)&&e(s._position)&&e(s._orientation)?a.set(s.id,s):(J(s,l,h),a.remove(s.id));for(r=n.length-1;r>-1;r--)J(s=n[r],l,h),a.remove(s.id)};const ui=function(){this._xHalfAngle=void 0,this._xHalfAngleSubscription=void 0,this._yHalfAngle=void 0,this._yHalfAngleSubscription=void 0,this._lateralSurfaceMaterial=void 0,this._lateralSurfaceMaterialSubscription=void 0,this._intersectionColor=void 0,this._intersectionColorSubscription=void 0,this._intersectionWidth=void 0,this._intersectionWidthSubscription=void 0,this._showIntersection=void 0,this._showIntersectionSubscription=void 0,this._radius=void 0,this._radiusSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._definitionChanged=new o};function di(i,t,n,o){var r=t[i];e(r)||(r=new V,t[i]=r),r.clock=n,r.cone=o,r.magnitude=1}function mi(i){var t=i._customSensor.directions,e=Math.tan(Math.min(i._xHalfAngle,k.toRadians(89))),n=Math.tan(Math.min(i._yHalfAngle,k.toRadians(89))),o=Math.atan(e/n),r=Math.atan(Math.sqrt(e*e+n*n));di(0,t,o,r),di(1,t,k.toRadians(180)-o,r),di(2,t,k.toRadians(180)+o,r),di(3,t,-o,r),t.length=4,i._customSensor.directions=t}Object.defineProperties(ui.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},xHalfAngle:i("xHalfAngle"),yHalfAngle:i("yHalfAngle"),lateralSurfaceMaterial:i("lateralSurfaceMaterial"),intersectionColor:i("intersectionColor"),intersectionWidth:i("intersectionWidth"),showIntersection:i("showIntersection"),radius:i("radius"),show:i("show")}),ui.prototype.clone=function(i){return e(i)||(i=new ui),i.xHalfAngle=this.xHalfAngle,i.yHalfAngle=this.yHalfAngle,i.radius=this.radius,i.show=this.show,i.showIntersection=this.showIntersection,i.intersectionColor=this.intersectionColor,i.intersectionWidth=this.intersectionWidth,i.lateralSurfaceMaterial=this.lateralSurfaceMaterial,i},ui.prototype.merge=function(i){if(!e(i))throw new n("source is required.");this.xHalfAngle=this.xHalfAngle??i.xHalfAngle,this.yHalfAngle=this.yHalfAngle??i.yHalfAngle,this.radius=this.radius??i.radius,this.show=this.show??i.show,this.showIntersection=this.showIntersection??i.showIntersection,this.intersectionColor=this.intersectionColor??i.intersectionColor,this.intersectionWidth=this.intersectionWidth??i.intersectionWidth,this.lateralSurfaceMaterial=this.lateralSurfaceMaterial??i.lateralSurfaceMaterial};const fi=function(i){i=i??r.EMPTY_OBJECT;var t=W(i);t._pickPrimitive=i._pickPrimitive??this,t.directions=void 0,this._customSensor=new L(t),this._xHalfAngle=i.xHalfAngle??k.PI_OVER_TWO,this._yHalfAngle=i.yHalfAngle??k.PI_OVER_TWO,mi(this)};Object.defineProperties(fi.prototype,{xHalfAngle:{get:function(){return this._xHalfAngle},set:function(i){if(i>k.PI_OVER_TWO)throw new n("xHalfAngle must be less than or equal to 90 degrees.");this._xHalfAngle!==i&&(this._xHalfAngle=i,mi(this))}},yHalfAngle:{get:function(){return this._yHalfAngle},set:function(i){if(i>k.PI_OVER_TWO)throw new n("yHalfAngle must be less than or equal to 90 degrees.");this._yHalfAngle!==i&&(this._yHalfAngle=i,mi(this))}},show:{get:function(){return this._customSensor.show},set:function(i){this._customSensor.show=i}},showIntersection:{get:function(){return this._customSensor.showIntersection},set:function(i){this._customSensor.showIntersection=i}},showThroughEllipsoid:{get:function(){return this._customSensor.showThroughEllipsoid},set:function(i){this._customSensor.showThroughEllipsoid=i}},modelMatrix:{get:function(){return this._customSensor.modelMatrix},set:function(i){this._customSensor.modelMatrix=i}},radius:{get:function(){return this._customSensor.radius},set:function(i){this._customSensor.radius=i}},lateralSurfaceMaterial:{get:function(){return this._customSensor.lateralSurfaceMaterial},set:function(i){this._customSensor.lateralSurfaceMaterial=i}},intersectionColor:{get:function(){return this._customSensor.intersectionColor},set:function(i){this._customSensor.intersectionColor=i}},intersectionWidth:{get:function(){return this._customSensor.intersectionWidth},set:function(i){this._customSensor.intersectionWidth=i}},id:{get:function(){return this._customSensor.id},set:function(i){this._customSensor.id=i}}}),fi.prototype.update=function(i){this._customSensor.update(i)},fi.prototype.isDestroyed=function(){return!1},fi.prototype.destroy=function(){return this._customSensor=this._customSensor&&this._customSensor.destroy(),C(this)};const _i=S.WHITE,pi=Number.POSITIVE_INFINITY,Ci=new x,gi=new s,vi=new T,wi=function(i,t){if(!e(i))throw new n("scene is required.");if(!e(t))throw new n("entityCollection is required.");t.collectionChanged.addEventListener(wi.prototype._onCollectionChanged,this),this._scene=i,this._primitives=i.primitives,this._entityCollection=t,this._hash={},this._entitiesToVisualize=new b,this._onCollectionChanged(t,t.values,[],[])};wi.prototype.update=function(i){if(!e(i))throw new n("time is required.");for(var t=this._entitiesToVisualize.values,o=this._hash,r=this._primitives,a=0,l=t.length;a<l;a++){var h,c,u=t[a],m=u._rectangularSensor,f=o[u.id],_=u.isShowing&&u.isAvailable(i)&&E.getValueOrDefault(m._show,i,!0);if(_&&(h=E.getValueOrUndefined(u._position,i,gi),c=E.getValueOrUndefined(u._orientation,i,vi),_=e(h)&&e(c)),_){var p=e(f)?f.primitive:void 0;e(p)||((p=new fi).id=u,r.add(p),f={primitive:p,position:void 0,orientation:void 0},o[u.id]=f),s.equals(h,f.position)&&T.equals(c,f.orientation)||(d.fromRotationTranslation(x.fromQuaternion(c,Ci),h,p.modelMatrix),f.position=s.clone(h,f.position),f.orientation=T.clone(c,f.orientation)),p.show=!0,p.xHalfAngle=E.getValueOrDefault(m._xHalfAngle,i,k.PI_OVER_TWO),p.yHalfAngle=E.getValueOrDefault(m._yHalfAngle,i,k.PI_OVER_TWO),p.radius=E.getValueOrDefault(m._radius,i,pi),p.lateralSurfaceMaterial=H.getValue(i,m._lateralSurfaceMaterial,p.lateralSurfaceMaterial),p.intersectionColor=E.getValueOrClonedDefault(m._intersectionColor,i,_i,p.intersectionColor),p.intersectionWidth=E.getValueOrDefault(m._intersectionWidth,i,1)}else e(f)&&(f.primitive.show=!1)}return!0},wi.prototype.isDestroyed=function(){return!1},wi.prototype.destroy=function(){for(var i=this._entitiesToVisualize.values,t=this._hash,e=this._primitives,n=i.length-1;n>-1;n--)J(i[n],t,e);return C(this)},wi.prototype._onCollectionChanged=function(i,t,n,o){var r,s,a=this._entitiesToVisualize,l=this._hash,h=this._primitives;for(r=t.length-1;r>-1;r--)s=t[r],e(s._rectangularSensor)&&e(s._position)&&e(s._orientation)&&a.set(s.id,s);for(r=o.length-1;r>-1;r--)s=o[r],e(s._rectangularSensor)&&e(s._position)&&e(s._orientation)?a.set(s.id,s):(J(s,l,h),a.remove(s.id));for(r=n.length-1;r>-1;r--)J(s=n[r],l,h),a.remove(s.id)};var Si=P.processPacketData,yi=P.processMaterialPacketData;function Ai(i,t,n,o,r){var a,l,h=[],c=t.unitSpherical,u=t.spherical,d=t.unitCartesian,m=t.cartesian;if(e(c)){for(a=0,l=c.length;a<l;a+=2)h.push(new V(c[a],c[a+1]));t.array=h}else if(e(u)){for(a=0,l=u.length;a<l;a+=3)h.push(new V(u[a],u[a+1],u[a+2]));t.array=h}else if(e(d)){for(a=0,l=d.length;a<l;a+=3){var f=V.fromCartesian3(new s(d[a],d[a+1],d[a+2]));V.normalize(f,f),h.push(f)}t.array=h}else if(e(m)){for(a=0,l=m.length;a<l;a+=3)h.push(V.fromCartesian3(new s(m[a],m[a+1],m[a+2])));t.array=h}Si(Array,i,"directions",t,n,o,r)}function Mi(i,t,e,n,o){Si(Boolean,i,"show",t.show,e,n,o),Si(Number,i,"radius",t.radius,e,n,o),Si(Boolean,i,"showIntersection",t.showIntersection,e,n,o),Si(S,i,"intersectionColor",t.intersectionColor,e,n,o),Si(Number,i,"intersectionWidth",t.intersectionWidth,e,n,o),yi(i,"lateralSurfaceMaterial",t.lateralSurfaceMaterial,e,n,o)}var Ii={iso8601:void 0};function xi(i,t,n,o){var r=t.agi_conicSensor;if(e(r)){var s,a=r.interval;e(a)&&(Ii.iso8601=a,s=F.fromIso8601(Ii));var l=i.conicSensor;e(l)||(i.addProperty("conicSensor"),l=new z,i.conicSensor=l),Mi(l,r,s,o,n),Si(Number,l,"innerHalfAngle",r.innerHalfAngle,s,o,n),Si(Number,l,"outerHalfAngle",r.outerHalfAngle,s,o,n),Si(Number,l,"minimumClockAngle",r.minimumClockAngle,s,o,n),Si(Number,l,"maximumClockAngle",r.maximumClockAngle,s,o,n)}}function Ti(i,t,n,o){var r=t.agi_customPatternSensor;if(e(r)){var s,a=r.interval;e(a)&&(Ii.iso8601=a,s=F.fromIso8601(Ii));var l=i.customPatternSensor;e(l)||(i.addProperty("customPatternSensor"),l=new oi,i.customPatternSensor=l),Mi(l,r,s,o,n);var h=r.directions;if(e(h))if(Array.isArray(h))for(var c=h.length,u=0;u<c;u++)Ai(l,h[u],s,o,n);else Ai(l,h,s,o,n)}}function bi(i,t,n,o){var r=t.agi_rectangularSensor;if(e(r)){var s,a=r.interval;e(a)&&(Ii.iso8601=a,s=F.fromIso8601(Ii));var l=i.rectangularSensor;e(l)||(i.addProperty("rectangularSensor"),l=new ui,i.rectangularSensor=l),Mi(l,r,s,o,n),Si(Number,l,"xHalfAngle",r.xHalfAngle,s,o,n),Si(Number,l,"yHalfAngle",r.yHalfAngle,s,o,n)}}var Ei=!1;!function(){if(!Ei){P.updaters.push(xi,Ti,bi);var i=O.defaultVisualizersCallback;O.defaultVisualizersCallback=function(t,e,n){var o=n.entities;return i(t,e,n).concat([new ni(t,o),new ci(t,o),new wi(t,o)])},Ei=!0}}();var ki={ConicSensorGraphics:z,ConicSensorVisualizer:ni,CustomPatternSensorGraphics:oi,CustomPatternSensorVisualizer:ci,CustomSensorVolume:L,RectangularPyramidSensorVolume:fi,RectangularSensorGraphics:ui,RectangularSensorVisualizer:wi};export{ki as default};
